{"ast":null,"code":"var _jsxFileName = \"/Users/blatde/Desktop/Projects/callistoDialogueTool/callisto-dialogue-tool/src/components/DialogueForm.js\";\nimport React, { Component } from \"react\";\nimport 'materialize-css';\nimport { Button, Card, Row, Col, CardPanel } from 'react-materialize';\nimport InitDialogueForm from \"./InitDialogueForm\";\nimport ScriptBuilder from \"./ScriptBuilder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DialogueForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scriptName: '',\n      leftParticipants: [],\n      rightParticipants: [],\n      initScript: false,\n      avaialableSpeakers: [],\n      scriptChunks: [],\n      scriptLength: []\n    };\n\n    this.handleInputChange = e => {\n      let {\n        value,\n        name\n      } = e.target;\n      this.setState({ ...this.state,\n        [name]: value\n      });\n      console.log(this.state);\n    };\n\n    this.handleLeftDropdownChange = leftParticipants => {\n      this.setState({\n        leftParticipants\n      });\n    };\n\n    this.handleRightDropdownChange = rightParticipants => {\n      this.setState({\n        rightParticipants\n      });\n    };\n\n    this.handleInitialDialogueSubmit = () => {\n      this.getAvailableSpeakers();\n      this.setState({\n        initScript: true\n      });\n    };\n\n    this.getAvailableSpeakers = () => {\n      let availableSpeakers = [];\n      this.state.rightParticipants.map(part => availableSpeakers.push(part));\n      this.state.leftParticipants.map(part => availableSpeakers.push(part));\n      this.setState({\n        availableSpeakers\n      }, () => console.log(availableSpeakers));\n    };\n\n    this.handleNewLineClick = () => {\n      const arrCount = this.state.scriptChunks.length;\n      const stateCopy = this.state.scriptChunks;\n      const newArr = stateCopy.push(arrCount);\n      console.log(newArr);\n      this.setState({\n        scriptChunks: newArr\n      }, () => console.log(newArr));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row center\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"white-text\",\n          children: \"Callisto Dialogue Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InitDialogueForm, {\n        onInputChange: this.handleInputChange,\n        onLeftDropdownChange: this.handleLeftDropdownChange,\n        onRightDropdownChange: this.handleRightDropdownChange,\n        scriptName: this.state.scriptName,\n        leftParticipants: this.state.leftParticipants,\n        rightParticipants: this.state.rightParticipants,\n        dialogueSubmit: this.handleInitialDialogueSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), this.state.initScript ? /*#__PURE__*/_jsxDEV(ScriptBuilder, {\n        addNewLine: this.handleNewLineClick,\n        avaialableSpeakers: this.state.avaialableSpeakers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DialogueForm;","map":{"version":3,"sources":["/Users/blatde/Desktop/Projects/callistoDialogueTool/callisto-dialogue-tool/src/components/DialogueForm.js"],"names":["React","Component","Button","Card","Row","Col","CardPanel","InitDialogueForm","ScriptBuilder","DialogueForm","state","scriptName","leftParticipants","rightParticipants","initScript","avaialableSpeakers","scriptChunks","scriptLength","handleInputChange","e","value","name","target","setState","console","log","handleLeftDropdownChange","handleRightDropdownChange","handleInitialDialogueSubmit","getAvailableSpeakers","availableSpeakers","map","part","push","handleNewLineClick","arrCount","length","stateCopy","newArr","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport 'materialize-css';\nimport { Button, Card, Row, Col, CardPanel} from 'react-materialize';\nimport InitDialogueForm from \"./InitDialogueForm\";\nimport ScriptBuilder from \"./ScriptBuilder\";\n\nclass DialogueForm extends Component {\n  state = {\n    scriptName: '',\n    leftParticipants: [],\n    rightParticipants: [],\n    initScript: false,\n    avaialableSpeakers: [],\n    scriptChunks: [],\n    scriptLength: []\n  }\n  \n  handleInputChange = e => {\n    let {value, name} = e.target;\n    this.setState({\n      ...this.state,\n      [name]: value\n    });\n    console.log(this.state)\n  }\n\n  handleLeftDropdownChange = (leftParticipants) => {\n    this.setState({leftParticipants})\n  }\n\n  handleRightDropdownChange = (rightParticipants) => {\n    this.setState({rightParticipants});\n  };\n\n  handleInitialDialogueSubmit = () => {\n    this.getAvailableSpeakers();\n    this.setState({\n      initScript: true\n    })\n  }\n\n  getAvailableSpeakers = () => {\n    let availableSpeakers = [];\n    this.state.rightParticipants.map(part => availableSpeakers.push(part));\n    this.state.leftParticipants.map(part => availableSpeakers.push(part));\n\n    this.setState({availableSpeakers}, () => console.log(availableSpeakers));\n\n  }\n\n  handleNewLineClick = () => {\n    const arrCount = this.state.scriptChunks.length;\n    const stateCopy = this.state.scriptChunks;\n    const newArr = stateCopy.push(arrCount);\n    console.log(newArr);\n    this.setState({\n      scriptChunks: newArr\n    }, () => console.log(newArr));\n  }\n  \n\n  render() {\n    return(\n      <div className='container'>\n        <div className='row center'>\n          <h1 className='white-text'>Callisto Dialogue Tool</h1>\n        </div>\n        \n        <InitDialogueForm\n          onInputChange={this.handleInputChange}\n          onLeftDropdownChange={this.handleLeftDropdownChange}\n          onRightDropdownChange={this.handleRightDropdownChange}\n          scriptName={this.state.scriptName}\n          leftParticipants={this.state.leftParticipants}\n          rightParticipants={this.state.rightParticipants}\n          dialogueSubmit={this.handleInitialDialogueSubmit}\n        />\n        \n  \n        {this.state.initScript ? (\n            <ScriptBuilder\n              addNewLine={this.handleNewLineClick}\n              avaialableSpeakers={this.state.avaialableSpeakers}\n            />\n          )\n        : null}\n\n      </div>\n    );\n  }\n\n}\n\nexport default DialogueForm;"]},"metadata":{},"sourceType":"module"}