{"ast":null,"code":"var _jsxFileName = \"/Users/blatde/Desktop/Projects/callistoDialogueTool/callisto-dialogue-tool/src/components/DialogueForm.js\";\nimport React, { Component } from \"react\";\nimport 'materialize-css';\nimport { Button, Card, Row, Col, CardPanel } from 'react-materialize';\nimport InitDialogueForm from \"./InitDialogueForm\";\nimport ScriptBuilder from \"./ScriptBuilder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DialogueForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scriptName: '',\n      leftParticipants: [],\n      rightParticipants: [],\n      initScript: false,\n      availableSpeakers: [],\n      scriptChunks: [],\n      textToSpeak: '',\n      activeSpeaker: {},\n      leftPortraits: [],\n      rightPortraits: [],\n      lineNumber: 0\n    };\n\n    this.handleInputChange = e => {\n      let {\n        value,\n        name\n      } = e.target;\n      this.setState({ ...this.state,\n        [name]: value\n      });\n      console.log(this.state);\n    };\n\n    this.handleLeftDropdownChange = leftParticipants => {\n      this.setState({\n        leftParticipants\n      });\n    };\n\n    this.handleRightDropdownChange = rightParticipants => {\n      this.setState({\n        rightParticipants\n      });\n    };\n\n    this.handleInitialDialogueSubmit = () => {\n      this.getAvailableSpeakers();\n      this.setState({\n        initScript: true\n      });\n    };\n\n    this.handleSpeakerChange = activeSpeaker => {\n      this.setState({\n        activeSpeaker\n      });\n    };\n\n    this.handleLeftPortraitsChange = leftPortraits => {\n      this.setState({\n        leftPortraits\n      });\n    };\n\n    this.handleRightPortraitsChange = rightPortraits => {\n      this.setState({\n        rightPortraits\n      });\n    };\n\n    this.getAvailableSpeakers = () => {\n      let availableSpeakers = [];\n      this.state.rightParticipants.map(part => availableSpeakers.push(part));\n      this.state.leftParticipants.map(part => availableSpeakers.push(part));\n      this.setState({\n        availableSpeakers\n      });\n    };\n\n    this.handleNewLineClick = () => {\n      const scriptChunk = {\n        activeSpeaker: this.state.activeSpeaker,\n        textToSpeak: this.state.textToSpeak,\n        leftPortraits: this.state.leftPortraits,\n        rightPortraits: this.state.rightPortraits,\n        lineNumber: this.state.lineNumber\n      };\n      const scriptChunks = this.state.scriptChunks;\n      scriptChunks.push(scriptChunk);\n      this.setState({\n        scriptChunks,\n        textToSpeak: '',\n        lineNumber: this.state.lineNumber + 1\n      }, () => console.log(this.state));\n    };\n\n    this.createDialogue = () => {\n      const dialogueObject = {\n        scriptName: this.state.scriptName,\n        dialogue: this.state.scriptChunks\n      };\n      console.log(dialogueObject);\n      let dialogueBlock = '';\n      this.state.scriptChunks.map(item => {\n        console.log(`\n\n      ///Line ${item.lineNumber}\n      myText[i] =\"${item.textToSpeak}\";\n      mySpeaker[i] =${item.activeSpeaker.value};\n      leftPortrait[i] =[${item.leftPortraits.toString}];\n      rightPortrait[i] =[${item.rightPortraits.toString}];\n      i++;\n\n    `);\n        dialogueBlock.concat(dialogueBlock, `\n\n        ///Line ${item.lineNumber}\n        myText[i] =\"${item.textToSpeak}\";\n        mySpeaker[i] =${item.activeSpeaker};\n        leftPortrait[i] =[${item.leftPortraits}];\n        rightPortrait[i] =[${item.rightPortraits}];\n        i++;\n\n      `);\n        return dialogueBlock;\n      });\n      console.log(dialogueBlock);\n      const dialogueInCode = `function ${this.state.scriptName}(){\n      var i = 0;\n\n      ${dialogueBlock}\n\n    }`;\n      console.log(dialogueInCode);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row center\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"white-text\",\n          children: \"Callisto Dialogue Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InitDialogueForm, {\n        onInputChange: this.handleInputChange,\n        onLeftDropdownChange: this.handleLeftDropdownChange,\n        onRightDropdownChange: this.handleRightDropdownChange,\n        scriptName: this.state.scriptName,\n        leftParticipants: this.state.leftParticipants,\n        rightParticipants: this.state.rightParticipants,\n        dialogueSubmit: this.handleInitialDialogueSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), this.state.initScript ? /*#__PURE__*/_jsxDEV(ScriptBuilder, {\n        lineNumber: this.state.lineNumber,\n        addNewLine: this.handleNewLineClick,\n        availableSpeakers: this.state.availableSpeakers,\n        handleSpeakerChange: this.handleSpeakerChange,\n        handleTextChange: this.handleInputChange,\n        textToSpeak: this.state.textToSpeak,\n        handleLeftPortraitsChange: this.handleLeftPortraitsChange,\n        leftPortraits: this.state.leftPortraits,\n        handleRightPortraitsChange: this.handleRightPortraitsChange,\n        rightPortraits: this.state.rightPortraits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.createDialogue,\n        children: \"Create Script\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DialogueForm;","map":{"version":3,"sources":["/Users/blatde/Desktop/Projects/callistoDialogueTool/callisto-dialogue-tool/src/components/DialogueForm.js"],"names":["React","Component","Button","Card","Row","Col","CardPanel","InitDialogueForm","ScriptBuilder","DialogueForm","state","scriptName","leftParticipants","rightParticipants","initScript","availableSpeakers","scriptChunks","textToSpeak","activeSpeaker","leftPortraits","rightPortraits","lineNumber","handleInputChange","e","value","name","target","setState","console","log","handleLeftDropdownChange","handleRightDropdownChange","handleInitialDialogueSubmit","getAvailableSpeakers","handleSpeakerChange","handleLeftPortraitsChange","handleRightPortraitsChange","map","part","push","handleNewLineClick","scriptChunk","createDialogue","dialogueObject","dialogue","dialogueBlock","item","toString","concat","dialogueInCode","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport 'materialize-css';\nimport { Button, Card, Row, Col, CardPanel} from 'react-materialize';\nimport InitDialogueForm from \"./InitDialogueForm\";\nimport ScriptBuilder from \"./ScriptBuilder\";\n\nclass DialogueForm extends Component {\n  state = {\n    scriptName: '',\n    leftParticipants: [],\n    rightParticipants: [],\n    initScript: false,\n    availableSpeakers: [],\n    scriptChunks: [],\n    textToSpeak: '',\n    activeSpeaker: {},\n    leftPortraits: [],\n    rightPortraits: [],\n    lineNumber: 0\n  }\n  \n  handleInputChange = e => {\n    let {value, name} = e.target;\n    this.setState({\n      ...this.state,\n      [name]: value\n    });\n    console.log(this.state)\n  }\n\n  handleLeftDropdownChange = (leftParticipants) => {\n    this.setState({leftParticipants})\n  }\n\n  handleRightDropdownChange = (rightParticipants) => {\n    this.setState({rightParticipants});\n  };\n\n  handleInitialDialogueSubmit = () => {\n    this.getAvailableSpeakers();\n    this.setState({\n      initScript: true\n    })\n  }\n\n  handleSpeakerChange = (activeSpeaker) => {\n    this.setState({activeSpeaker});\n  }\n\n  handleLeftPortraitsChange = (leftPortraits) => {\n    this.setState({leftPortraits});\n  }\n\n  handleRightPortraitsChange = (rightPortraits) => {\n    this.setState({rightPortraits});\n  }\n\n  getAvailableSpeakers = () => {\n    let availableSpeakers = [];\n    this.state.rightParticipants.map(part => availableSpeakers.push(part));\n    this.state.leftParticipants.map(part => availableSpeakers.push(part));\n\n    this.setState({availableSpeakers});\n\n  }\n\n  handleNewLineClick = () => {\n    const scriptChunk = {\n      activeSpeaker: this.state.activeSpeaker,\n      textToSpeak: this.state.textToSpeak,\n      leftPortraits: this.state.leftPortraits,\n      rightPortraits: this.state.rightPortraits,\n      lineNumber: this.state.lineNumber\n    }\n    const scriptChunks = this.state.scriptChunks;\n    scriptChunks.push(scriptChunk);\n    this.setState({\n      scriptChunks,\n      textToSpeak: '',\n      lineNumber: this.state.lineNumber + 1\n    }, () => console.log(this.state));\n\n\n  }\n\n  createDialogue = () => {\n    const dialogueObject = {\n      scriptName: this.state.scriptName,\n      dialogue: this.state.scriptChunks\n    }\n\n    console.log(dialogueObject)\n    \n    let dialogueBlock = ''\n    this.state.scriptChunks.map((item) => {\n      console.log(`\n\n      ///Line ${item.lineNumber}\n      myText[i] =\"${item.textToSpeak}\";\n      mySpeaker[i] =${item.activeSpeaker.value};\n      leftPortrait[i] =[${item.leftPortraits.toString}];\n      rightPortrait[i] =[${item.rightPortraits.toString}];\n      i++;\n\n    `)\n      \n      dialogueBlock.concat(dialogueBlock, `\n\n        ///Line ${item.lineNumber}\n        myText[i] =\"${item.textToSpeak}\";\n        mySpeaker[i] =${item.activeSpeaker};\n        leftPortrait[i] =[${item.leftPortraits}];\n        rightPortrait[i] =[${item.rightPortraits}];\n        i++;\n\n      `\n      )\n      return dialogueBlock\n    })\n\n    console.log(dialogueBlock);\n    \n    const dialogueInCode =\n    `function ${this.state.scriptName}(){\n      var i = 0;\n\n      ${dialogueBlock}\n\n    }`\n\n    console.log(dialogueInCode)\n\n  }\n  \n\n  render() {\n    return(\n      <div className='container'>\n        <div className='row center'>\n          <h1 className='white-text'>Callisto Dialogue Tool</h1>\n        </div>\n        \n        <InitDialogueForm\n          onInputChange={this.handleInputChange}\n          onLeftDropdownChange={this.handleLeftDropdownChange}\n          onRightDropdownChange={this.handleRightDropdownChange}\n          scriptName={this.state.scriptName}\n          leftParticipants={this.state.leftParticipants}\n          rightParticipants={this.state.rightParticipants}\n          dialogueSubmit={this.handleInitialDialogueSubmit}\n        />\n        {this.state.initScript ? (\n            <ScriptBuilder\n              lineNumber={this.state.lineNumber}\n              addNewLine={this.handleNewLineClick}\n              availableSpeakers={this.state.availableSpeakers}\n              handleSpeakerChange={this.handleSpeakerChange}\n              handleTextChange={this.handleInputChange}\n              textToSpeak={this.state.textToSpeak}\n              handleLeftPortraitsChange={this.handleLeftPortraitsChange}\n              leftPortraits={this.state.leftPortraits}\n              handleRightPortraitsChange={this.handleRightPortraitsChange}\n              rightPortraits={this.state.rightPortraits}\n            />\n          )\n        : null}\n        <Button\n          onClick={this.createDialogue}\n        >\n          Create Script\n        </Button>\n      </div>\n    );\n  }\n\n}\n\nexport default DialogueForm;"]},"metadata":{},"sourceType":"module"}